#+TITLE: Alex Birdsall
#+SUBTITLE: Full Stack Software Engineer
#+description: The resum√© of Alex Birdsall, full stack software engineer
#+options: html-link-use-abs-url:nil html-postamble:nil html-preamble:nil html-scripts:t toc:nil
#+options: html-style:t html5-fancy:t tex:t
#+html_doctype: html5
#+html_container: div
#+keywords:
#+html_link_home:
#+html_link_up:
#+html_mathjax:
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://thomasf.github.io/solarized-css/solarized-light.min.css" />
#+html_head_extra:
#+infojs_opt:
#+creator:
#+latex_header:

* Project management [0/2] :noexport:
** TODO publish to html with custom CSS
** TODO figure out how to apply html classes to items

* Work Experience (5 years)
** Sigfig
*** skills
- typescript
- angularJS
- custom webpack configuration
- custom CLI build tool for legacy frontend app
- react
- scala
- akka-http
- A/B testing
*** description
[insert paragraph here]
** Legal Information Institute, Cornell University Law School
*** skills
- ES2015
- yarn
- unit tests (karma & jasmine)
- build scripts
- browser caching
- regular expressions
*** description
    Cornell Law School picked up the Lawfetcher project, rebranding it as RIO (Read It Online) and
    hiting me on to maintain and expand it. I refactored and completed test coverage of the domain
    logic; wrote code to parse a broader set of citation types and link to more sources; converted
    the build process to transpile modular ES2015 application code and tests; and implemented a
    custom browser cache-busting scheme using md5-based filename fingerprinting modeled after
    [[http://guides.rubyonrails.org/asset_pipeline.html#what-is-fingerprinting-and-why-should-i-care-questionmark][Rails' asset pipeline]], enabling both frequent, iterative code deployment and efficient
    long-term caching.
** The Emoji Foundation
*** skills
- php 7
- Apache
- build scripts
- SEO
*** description
As a consultant, I did freelance work for The Emoji Foundation's crowdsourced Emoji Dictionary. The
work focused on human-readable URLs, rewriting database queries and building indexes for clarity and
efficiency, and other SEO and performance fundamentals, as well as extracting shared templates and
refactoring old code for better semantics and maintainability.
** Flock
*** skills
- Rails 4
- rspec
- Middleman
- Backbone
- SCSS
- encryption & authentication
*** description
    As software engineer for an HR and compliance startup, I worked with the entire stack from
    stylesheets to server ops. I maintained Middleman static sites for the company's landing page
    and blog as well as its Rails app. I personally implemented secure and user-friendly
    integrations with TraxPayroll and Greenhouse.io, which involved complicated data mapping,
    multiple forms of encryption, and, at times, working with out-of-date and contradictory
    documentation. I organized both the stylesheets and javascript assets, spanning hundreds of
    files (some containing several thousands of lines); and in general, worked hard to model and
    advocate for consistency of data modeling, clear and explicit API boundaries, and well-designed
    abstraction on a codebase, initially built by foreign contractors, that left much to be desired
    in those regards.
** Lawfetcher
*** skills
- JavaScript
- npm
- unit testing (jasmine)
- browserify
*** description
    A freelance project in collaboration with Emeritus Prof. Peter W. Martin of Cornell Law. A free
    tool for legal writing, it semantically parses US legal citations and programmatically builds
    direct links to the full text in various free and subscription services. More regular
    expressions than you can shake a stick at.
** magoosh (?)

* Education
** dev bootcamp 2014
*** skills
- Ruby
- Rails
- Sinatra
- JavaScript
- jQuery
- *NIX
- http
- HTML
- CSS
** Cornell College, class of '08
   B.A. in English, minor in Music.
   Received 2007 Winnifred Van Etten Award for Creative and Scholarly Excellence.

   Though seemingly unrelated, my studies centered on an interest in how human expression is shaped
   by the logically analyzable systems it exists within, like syntax, grammar, and tonal harmony.
   I also received formal training in how to evaluate writing (both my own and that of others)
   in terms of organization and clarity. I have found this to be a surprisingly sound foundation
   for programming.
