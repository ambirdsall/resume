{"version":3,"sources":["webpack:///./src/components/nameplate.js","webpack:///./src/components/entry.js","webpack:///./src/components/resume.js","webpack:///./src/components/seo.js","webpack:///./src/pages/index.js"],"names":["Nameplate","_ref","name","title","phone","email","children","react_default","a","createElement","className","toUpperCase","replace","href","toSkill","s","Fragment","Entry","titleLink","dates","skills","map","Resume","id","entry","SEO","description","lang","meta","site","_2417117884","data","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","IndexPage","rel","type","seo","nameplate","resume"],"mappings":"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","file":"component---src-pages-index-js-83481b6b1b5142d3436d.js","sourcesContent":["import React from \"react\"\n\n// non-breaking space\nconst NBSP = \"\\u00a0\"\n\nconst Nameplate = ({\n  name,\n  title,\n  phone,\n  email,\n  children,\n}) => (\n  <header className=\"block intro\">\n    <div className=\"intro--nameplate\">\n      <h1 className=\"nameplate__name\">{name}</h1>\n      <h2 className=\"nameplate__title\">{title.toUpperCase()}</h2>\n    </div>\n    <div className=\"intro--contact-info\">\n      <div className=\"block contact-info--item item__left\">{phone.replace(\" \", NBSP)}</div>\n      <div className=\"block contact-info--item item__right\">\n        <a href={`mailto:${email}`}>{email}</a>\n      </div>\n    </div>\n    <div className=\"intro--description\">\n      <p> {children} </p>\n    </div>\n  </header>\n)\n\nexport default Nameplate\n","import React from \"react\"\n\nconst toSkill = s => <>{s}<br/></>\nconst formatDate = dateString => dateString.replace(\"'\", \"’\").replace(\"-\", \"–\")\n\nconst Entry = ({\n  title,\n  titleLink,\n  dates,\n  skills,\n  children,\n}) => (\n  <div className=\"block entry\">\n    <div className=\"block entry--context\">\n      <div className=\"context__dates\">{formatDate(dates)}</div>\n      <div className=\"context__skills\">\n        {skills.map(toSkill)}\n      </div>\n    </div>\n    <div className=\"block entry--body\">\n      <h3 className=\"entry--title\">\n        <a href={titleLink}>\n          {title}\n        </a>\n      </h3>\n      <p className=\"entry--description\">\n        {children}\n      </p>\n    </div>\n  </div>\n)\n\nexport default Entry\n","import React from \"react\"\n\nimport Entry from \"../components/entry\"\n\nconst Resume = () => (\n  <>\n      <div id=\"work-experience\" className=\"block-group\">\n        <Entry title=\"SigFig\"\n               titleLink=\"https://sigfig.com\"\n               dates=\"Jul '17-Dec '19\"\n               skills={[\n                 \"typescript\",\n                 \"scala\",\n                 \"angularJS\",\n                 \"frontend builds\",\n                 \"react\",\n                 \"A/B testing\",\n               ]}>\n\n          My first role at SigFig was working on a large, whitelabeled angularJS\n          app written in typescript. While regularly developing unit-tested\n          features and fixing bugs, I helped redesign its build system to use\n          webpack and ES2015 modules, writing custom webpack configuration to\n          dramatically simplify the maintenance of customer-specific code; I\n          converted thousands of files to the new system during the migration. I\n          designed an internal A/B testing API and rewrote its integration with\n          a 3rd-party user assignment backend, using a modular design to allow\n          for future upgrades. I helped launch a new product, writing code both\n          for its typescript and react frontend and its REST backend, which was\n          written in Scala.\n\n        </Entry>\n        <Entry title=\"Legal Information Institute, Cornell Law\"\n               titleLink=\"https://law.cornell.edu/rio\"\n               dates=\"Aug '16-Jun '17\"\n               skills={[\n                 \"ES2015\",\n                 \"build scripts\",\n                 \"browser caching\",\n               ]}>\n\n          Cornell Law School picked up the Lawfetcher project, rebranding it as\n          RIO (Read It Online) and hiring me to maintain and expand it. I\n          refactored and completed test coverage of the domain logic; wrote code\n          to parse a broader set of citation types and link to more sources;\n          converted the build process to transpile modular ES2015 application\n          code and tests; and implemented a <a\n          href=\"http://guides.rubyonrails.org/asset_pipeline.html#what-is-fingerprinting-and-why-should-i-care-questionmark\">\n          filename fingerprinting</a> system to manage browser caching, enabling\n          both frequent, iterative code deployment and efficient loading.\n\n        </Entry>\n        {/* emoji dictionary */}\n        <Entry title=\"The Emoji Dictionary\" titleLink=\"https://emojidictionary.emojifoundation.com/\"\n               dates=\"Jan '17-Jun '17\"\n               skills={[\n                 \"php 7\",\n                 \"Apache\",\n                 \"build scripts\",\n                 \"SEO\",\n               ]}>\n\n          I did freelance work for The Emoji Foundation's crowdsourced Emoji\n          Dictionary. I created human-readable URLs, rewrote database queries\n          for clarity and efficiency and created appropriate indexes, improved\n          the site's SEO and performance, and refactored its PHP codebase,\n          extracting shared code and refactoring to improve consistency and\n          maintainability.\n\n        </Entry>\n        {/* Flock */}\n        <Entry title=\"Flock\" titleLink=\"www.helloflock.com\"\n               dates=\"Jan '16-July '16\"\n               skills={[\n                 \"Rails 4\",\n                 \"Middleman\",\n                 \"SCSS\",\n                 \"encryption & authentication\",\n               ]}>\n\n          As software engineer for an early-stage HR and compliance startup, I\n          worked with the entire stack from stylesheets to server ops. As part\n          of a small team, I built out and maintained its Rails app as well as\n          statically-generated marketing pages and blog. I reorganized initially\n          haphazard CSS and javascript assets, spanning hundreds of files (some\n          containing several thousand lines). I personally implemented secure\n          integrations with digital payroll and hiring services, creating and\n          documenting the necessary data mappings, implementing multiple layers\n          of encryption, and working with, at times, out-of-date and\n          contradictory documentation.\n\n        </Entry>\n        {/* lawfetcher */}\n        <Entry title=\"Lawfetcher\" titleLink=\"http://www.access-to-law.com/lawfetcher\"\n               dates=\"Aug '15-Dec '15\"\n               skills={[\n                 \"JavaScript\",\n                 \"regular expressions\",\n                 \"browserify\",\n               ]}>\n\n          In collaboration with Emeritus Prof. Peter W. Martin of Cornell Law, I\n          wrote a web application to semantically parse US legal citations and\n          build direct links to their source texts in various online collections\n          of legal documents. I created the data model for a citation and wrote\n          code from scratch to parse a citation string so it could be\n          programatically manipulated. More regular expressions than you can\n          shake a stick at.\n\n        </Entry>\n        {/* magoosh */}\n        <Entry title=\"Magoosh\" titleLink=\"www.magoosh.com\"\n               dates=\"Jan '15-Mar '15\"\n               skills={[\n                 \"MySQL\",\n                 \"Rails 3\",\n                 \"CoffeeScript\",\n                 \"HAML\",\n                 \"Bootstrap\",\n               ]}>\n\n          I worked a contract job with Magoosh, a leader in online test prep\n          based in Berkeley. I shipped new features in their Rails app,\n          including auto-tagging for support tickets, an instructor dashboard,\n          an in-house A/B testing library, and a photo upload system.\n\n        </Entry>\n      </div>\n      <div id=\"education\" className=\"block-group\">\n        <Entry title=\"Dev Bootcamp\" titleLink=\"https://en.wikipedia.org/wiki/Dev_Bootcamp\"\n               dates=\"Jul-Sept '14\"\n               skills={[\n                 \"Programming & web fundamentals\",\n                 \"git & *nix CLI\",\n                 \"Ruby & Rails\",\n                 \"JavaScript, HTML, & CSS\",\n               ]}>\n\n          An immersive 19-week web development program. Over the final 9 weeks alone, I worked over\n          1000 hours at the San Francisco campus in an intensely collaborative environment that\n          emphasized hands-on learning, empathy, communication, and problem-solving.\n\n        </Entry>\n        <Entry title=\"Portland Community College\" titleLink=\"www.pcc.edu\"\n               dates=\"Nov '12-Jun '14\"\n               skills={[]}>\n\n          While working as an art teacher, independently pursued interests in Statistics and Computer Science. Where\n          I discovered how much I enjoy programming.\n\n        </Entry>\n\n        <Entry title=\"Cornell College\" titleLink=\"https://cornellcollege.edu/\"\n               dates=\"Class of '08\"\n               skills={[]}>\n\n          B.A. in English, minor in Music.\n          Received 2007 Winnifred Van Etten Award for Creative and Scholarly Excellence.\n\n          <br/><br/>\n\n          Though seemingly unrelated, my studies centered on an interest in how human expression exists within\n          and is influenced by logically analyzable systems like syntax, music theory, or grammar. I have found\n          this to be surprisingly good preparation for the work of programming.\n\n        </Entry>\n\n      </div>\n  </>\n)\n\nexport default Resume\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import Helmet from \"react-helmet\"\nimport React from \"react\"\n\nimport Nameplate from \"../components/nameplate\"\nimport Resume from \"../components/resume\"\nimport SEO from \"../components/seo\"\nimport \"./index.css\"\n\nconst IndexPage = () => (\n  <>\n    <Helmet>\n      <link href='https://fonts.googleapis.com/css?family=Droid+Sans:300,400|Droid+Serif:400,700,400italic' rel='stylesheet' type='text/css'/>\n    </Helmet>\n\n    <SEO title=\"Alex Birdsall, Software Engineer\" />\n\n    <div className=\"block-group container\">\n      <Nameplate\n        name=\"Alex Birdsall\"\n        title=\"Full Stack Web Developer\"\n        phone=\"(802) 989-5647\"\n        email=\"ambirdsall@gmail.com\">\n        I care about solving problems and I hope to build beautiful, logically\n        interesting things, working in a team that cares about ethics,\n        collaboration, simplicity, and quality.\n      </Nameplate>\n\n      <Resume/>\n    </div>\n  </>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}