{"version":3,"sources":["webpack:///./src/components/nameplate.js","webpack:///./src/components/entry.js","webpack:///./src/components/resume.js","webpack:///./src/components/seo.js","webpack:///./src/pages/index.js"],"names":["Nameplate","_ref","name","title","phone","email","children","react_default","a","createElement","className","toUpperCase","replace","href","toSkill","s","Fragment","Entry","titleLink","dates","skills","map","Resume","id","entry","SEO","description","lang","meta","site","_2417117884","data","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","IndexPage","rel","type","seo","nameplate","resume"],"mappings":"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","file":"component---src-pages-index-js-346f7a0b55a6a2ffd791.js","sourcesContent":["import React from \"react\"\n\n// non-breaking space\nconst NBSP = \"\\u00a0\"\n\nconst Nameplate = ({\n  name,\n  title,\n  phone,\n  email,\n  children,\n}) => (\n  <header className=\"block intro\">\n    <div className=\"intro--nameplate\">\n      <h1 className=\"nameplate__name\">{name}</h1>\n      <h2 className=\"nameplate__title\">{title.toUpperCase()}</h2>\n    </div>\n    <div className=\"intro--contact-info\">\n      <div className=\"block contact-info--item item__left\">{phone.replace(\" \", NBSP)}</div>\n      <div className=\"block contact-info--item item__right\">\n        <a href={`mailto:${email}`}>{email}</a>\n      </div>\n    </div>\n    <div className=\"intro--description\">\n      <p> {children} </p>\n    </div>\n  </header>\n)\n\nexport default Nameplate\n","import React from \"react\"\n\nconst toSkill = s => <>{s}<br/></>\nconst formatDate = dateString => dateString.replace(\"'\", \"’\").replace(\"-\", \"–\")\n\nconst Entry = ({\n  title,\n  titleLink,\n  dates,\n  skills,\n  children,\n}) => (\n  <div className=\"block entry\">\n    <div className=\"block entry--context\">\n      <div className=\"context__dates\">{formatDate(dates)}</div>\n      <div className=\"context__skills\">\n        {skills.map(toSkill)}\n      </div>\n    </div>\n    <div className=\"block entry--body\">\n      <h3 className=\"entry--title\">\n        <a href={titleLink}>\n          {title}\n        </a>\n      </h3>\n      <p className=\"entry--description\">\n        {children}\n      </p>\n    </div>\n  </div>\n)\n\nexport default Entry\n","import React from \"react\"\n\nimport Entry from \"../components/entry\"\n\nconst Resume = () => (\n  <>\n      <div id=\"work-experience\" className=\"block-group\">\n        <Entry title=\"SigFig\"\n               titleLink=\"https://sigfig.com\"\n               dates=\"Jul '17-Present\"\n               skills={[\n                 \"typescript\",\n                 \"scala\",\n                 \"angularJS\",\n                 \"frontend builds\",\n                 \"react\",\n                 \"A/B testing\",\n               ]}>\n          My first role at SigFig was as an angularJS dev. Along with developing unit-tested\n          features and fixing bugs, I helped redesign the build system of a large whitelabeled\n          typescript app to use ES2015 modules and manage dependencies with npm or yarn; I converted\n          hundreds of files to the new system during the migration. I personally refactored the\n          build system to decouple its new build tool from its old one, significantly simplifying\n          its configuration. I also designed the component A/B testing API and rewrote its\n          integration with a 3rd-party user assignment backend, using a modular design so that the\n          testing backend could easily be replaced by a better alternative down the line. I was also\n          involved in the early stages of work with a new frontend application using typescript and\n          react.\n          <br/><br/>\n          Soon after, I transfered over to work on building the Scala backend service which supports\n          that product. I helped spec out the REST API, and I wrote code which aggregated and\n          composed data from various microservices to simplify complex, paperwork-heavy workflows.\n        </Entry>\n        <Entry title=\"Legal Information Institute, Cornell Law\"\n               titleLink=\"https://law.cornell.edu/rio\"\n               dates=\"Aug '16-Jun '17\"\n               skills={[\n                 \"ES2015\",\n                 \"build scripts\",\n                 \"browser caching\",\n               ]}>\n          Cornell Law School picked up the Lawfetcher project, rebranding it as RIO (Read It Online) and\n          hiring me to maintain and expand it. I refactored and completed test coverage of the\n          domain logic; wrote code to parse a broader set of citation types and link to more\n          sources; converted the build process to transpile modular ES2015 application code and\n          tests; and implemented a <a href=\"http://guides.rubyonrails.org/asset_pipeline.html#what-is-fingerprinting-and-why-should-i-care-questionmark\">\n            filename fingerprinting</a> system to manage browser caching, enabling both frequent,\n          iterative code deployment and efficient loading.\n        </Entry>\n        {/* emoji dictionary */}\n        <Entry title=\"The Emoji Dictionary\" titleLink=\"https://emojidictionary.emojifoundation.com/\"\n               dates=\"Jan '17-Jun '17\"\n               skills={[\n                 \"php 7\",\n                 \"Apache\",\n                 \"build scripts\",\n                 \"SEO\",\n               ]}>\n          As a consultant, I did freelance work for The Emoji Foundation's crowdsourced Emoji\n          Dictionary. The work focused on human-readable URLs, rewriting database queries and\n          building indexes for clarity and efficiency, and other SEO and performance fundamentals,\n          as well as extracting shared templates and refactoring old code for better semantics and\n          maintainability.\n        </Entry>\n        {/* Flock */}\n        <Entry title=\"Flock\" titleLink=\"www.helloflock.com\"\n               dates=\"Jan '16-July '16\"\n               skills={[\n                 \"Rails 4\",\n                 \"Middleman\",\n                 \"SCSS\",\n                 \"encryption & authentication\",\n               ]}>\n          As software engineer for an HR and compliance startup, I worked with the entire stack from\n          stylesheets to server ops. I maintained Middleman static sites for the company's landing\n          page and blog as well as its Rails app. I personally implemented secure and user-friendly\n          integrations with TraxPayroll and Greenhouse.io, which involved complicated data mapping,\n          multiple forms of encryption, and, at times, working with out-of-date and contradictory\n          documentation. I organized both the stylesheets and javascript assets, spanning hundreds\n          of files (some containing several thousands of lines); and in general, worked hard to model and\n          advocate for consistency of data modeling, clear and explicit API boundaries, and well-designed\n          abstraction on a codebase, initially built by foreign contractors, that left much to be desired\n          in those regards.\n        </Entry>\n        {/* lawfetcher */}\n        <Entry title=\"Lawfetcher\" titleLink=\"http://www.access-to-law.com/lawfetcher\"\n               dates=\"Aug '15-Dec '15\"\n               skills={[\n                 \"JavaScript\",\n                 \"regular expressions\",\n                 \"browserify\",\n               ]}>\n\n          A freelance project in collaboration with Emeritus Prof. Peter W. Martin of Cornell Law. A\n          free tool for legal writing, it semantically parses US legal citations and\n          programmatically builds direct links to the full text in various free and subscription\n          services. More regular expressions than you can shake a stick at.\n\n        </Entry>\n        {/* magoosh */}\n        <Entry title=\"Magoosh\" titleLink=\"www.magoosh.com\"\n               dates=\"Jan '15-Mar '15\"\n               skills={[\n                 \"MySQL\",\n                 \"Rails 3\",\n                 \"CoffeeScript\",\n                 \"HAML\",\n                 \"Bootstrap\",\n               ]}>\n\n          I worked as a junior dev with Magoosh, a leader in online test prep based in Berkeley. I shipped many\n          features, including auto-tagging for support tickets, an instructor dashboard, an in-house A/B testing\n          library, and a photo upload system for static pages. I focused intensely on improving the design\n          quality and professionalism of my code.\n\n        </Entry>\n      </div>\n      <div id=\"education\" className=\"block-group\">\n        <Entry title=\"Dev Bootcamp\" titleLink=\"https://en.wikipedia.org/wiki/Dev_Bootcamp\"\n               dates=\"Jul-Sept '14\"\n               skills={[\n                 \"Programming & web fundamentals\",\n                 \"git & *nix CLI\",\n                 \"Ruby & Rails\",\n                 \"JavaScript, HTML, & CSS\",\n               ]}>\n\n          An immersive 19-week web development program. Over the final 9 weeks alone, I worked over\n          1000 hours at the San Francisco campus in an intensely collaborative environment that\n          emphasized hands-on learning, empathy, communication, and problem-solving.\n\n        </Entry>\n        <Entry title=\"Portland Community College\" titleLink=\"www.pcc.edu\"\n               dates=\"Nov '12-Jun '14\"\n               skills={[]}>\n\n          While working as an art teacher, independently pursued interests in Statistics and Computer Science. Where\n          I discovered how much I enjoy programming.\n\n        </Entry>\n\n        <Entry title=\"Cornell College\" titleLink=\"https://cornellcollege.edu/\"\n               dates=\"Class of '08\"\n               skills={[]}>\n\n          B.A. in English, minor in Music.\n          Received 2007 Winnifred Van Etten Award for Creative and Scholarly Excellence.\n\n          <br/><br/>\n\n          Though seemingly unrelated, my studies centered on an interest in how human expression exists within\n          and is influenced by logically analyzable systems like syntax, music theory, or grammar. I have found\n          this to be surprisingly good preparation for the work of programming.\n\n        </Entry>\n\n      </div>\n  </>\n)\n\nexport default Resume\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import Helmet from \"react-helmet\"\nimport React from \"react\"\n\nimport Nameplate from \"../components/nameplate\"\nimport Resume from \"../components/resume\"\nimport SEO from \"../components/seo\"\nimport \"./index.css\"\n\nconst IndexPage = () => (\n  <>\n    <Helmet>\n      <link href='https://fonts.googleapis.com/css?family=Droid+Sans:300,400|Droid+Serif:400,700,400italic' rel='stylesheet' type='text/css'/>\n    </Helmet>\n\n    <SEO title=\"Alex Birdsall, Software Engineer\" />\n\n    <div className=\"block-group container\">\n      <Nameplate\n        name=\"Alex Birdsall\"\n        title=\"Full Stack Web Developer\"\n        phone=\"(802) 989-5647\"\n        email=\"ambirdsall@gmail.com\">\n        I care about solving problems and I hope to build beautiful, logically interesting things, working in\n        a team that cares about ethics, collaboration, and quality.\n      </Nameplate>\n\n      <Resume/>\n    </div>\n  </>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}